name: Full Stack CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      # Setup Node.js for frontend build
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23.11'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      # Build and test frontend
      - name: Build Frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run build
          npm test

      # Setup Java for backend build
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.0.0

      # Copy frontend build to backend resources
      - name: Copy Frontend Build to Backend
        run: |
          mkdir -p backend/src/main/resources/static
          cp -r frontend/dist/* backend/src/main/resources/static/

      # Build and test backend
      - name: Build Backend
        working-directory: ./backend
        run: ./gradlew build

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Login to Nexus
      - name: Login to Nexus
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.NEXUS_REGISTRY_URL }}
          username: ${{ secrets.NEXUS_USERNAME }}
          password: ${{ secrets.NEXUS_PASSWORD }}

      # Build and push Docker image to Docker Hub
      - name: Build and Push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/gh-toy-project-app:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/gh-toy-project-app:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/gh-toy-project-app:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/gh-toy-project-app:buildcache,mode=max

      # Build and push Docker image to Nexus
      - name: Build and Push to Nexus
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ secrets.NEXUS_REGISTRY_URL }}/gh-toy-project-app:latest
            ${{ secrets.NEXUS_REGISTRY_URL }}/gh-toy-project-app:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.NEXUS_REGISTRY_URL }}/gh-toy-project-app:buildcache
          cache-to: type=registry,ref=${{ secrets.NEXUS_REGISTRY_URL }}/gh-toy-project-app:buildcache,mode=max

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v4.0.0
